// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// CacheRepository is an autogenerated mock type for the CacheRepository type
type CacheRepository struct {
	mock.Mock
}

// Get provides a mock function with given fields: key
func (_m *CacheRepository) Get(key string) string {
	ret := _m.Called(key)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetAllKeysByPattern provides a mock function with given fields: pattern
func (_m *CacheRepository) GetAllKeysByPattern(pattern string) []string {
	ret := _m.Called(pattern)

	var r0 []string
	if rf, ok := ret.Get(0).(func(string) []string); ok {
		r0 = rf(pattern)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// Set provides a mock function with given fields: key, value, duration
func (_m *CacheRepository) Set(key string, value interface{}, duration time.Duration) error {
	ret := _m.Called(key, value, duration)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}, time.Duration) error); ok {
		r0 = rf(key, value, duration)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
